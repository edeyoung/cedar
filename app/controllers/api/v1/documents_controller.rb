module API
  module V1
    class DocumentsController < API::V1::BaseController
      resource_description do
        short 'QRDA data and associated information'
        formats ['json']
        header 'X-API-EMAIL', 'user\'s email', required: true
        header 'X-API-TOKEN', 'user\'s current authentication token', required: true
        description <<-EOS
        In addition to the raw qrda data, Documents contain the validity of the qrda
        data in the form of an expected_result field, which can either be reject or accept.

        Users can either compare the expected_result field with the output of their collection system,
        or they can report their results to an actual_result field through a PUT update.
        Reporting results updates the state field(pass or fail), and is reflected on the web front end.
        EOS
      end

      api! 'get all documents of test execution'
      def index
        render json: te.documents
      end

      api! 'get document of test execution'
      description <<-EOS
      Documents are retrieved using their index within the test_exection they belong to
      EOS
      def show
        render json: te.documents[params[:id].to_i]
      end

      api! 'report result'
      param :actual_result, %w(accept reject),
            desc: 'Result generated by your system. "accept" if your system thinks the qrda is valid, and "reject" if it thinks it is invalid',
            required: true
      def update
        document = te.documents[params[:id].to_i]
        document.update_attribute(:actual_result, result_params)
        document.update_state
        render json: document
      end

      private

      def result_params
        params.require(:actual_result)
      end

      def te
        TestExecution.find(params[:test_execution_id])
      end
    end
  end
end
